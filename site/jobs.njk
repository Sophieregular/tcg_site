---
layout: "layouts/jobs-board.njk"
title: Vacancies at The Coders Guild

---


<main class="main inner flex flex-1 flex-col focus:outline-none" tabindex="-1">
{# check the below div - no closing tag but stopping column display for main#}
    <div class="flex flex-wrap justify-center">
      <div class="w-full h-full lg:px-6">
        <div class="flex flex-col">
        {% for job in vacancies %}

          <div class="main-container singleAd flex flex-col">
            <div class="card-container  bg-white my-4 p-8 rounded-lg shadow-xl">

              <div class="top-row flex flex-row justify-between mb-6">
                <div class="hidden md:block w-36 h-36 mr-2" style="background-image: url('{%if job.employerLogo %}{{job.employerLogo}}{%else%}{{site.images.logo}}{%endif%}'); background-size: contain; background-repeat: no-repeat; background-position: center;" alt="{{job.jobTitle}}" class="w-24 h-24 mr-6">
                </div>
                <div class="flex flex-col align-start justify-self-start w-full">
                  <div class="flex flex-wrap justify-between w-full">
                    <h3 class="p-0 mb-0 leading-none text-xl">{{job.jobTitle}}</h3>
                    <span class="font-bold p-0 m-0">{%if job.salary%}Â£{{job.salary}}{%else%}DOE{%endif%}</span>
                  </div>
                  <div class="flex flex-row flex-wrap items-center mt-2">
                    <div class="flex items-center my-2 sm:my-0">
                      <img src="../images/apprenticeJobAd/place_black_24dp.svg" alt="location-icon" class="p-0">{%for location in job.location %}<span class="mr-4 text-sm">{{location}}</span>{% endfor %}
                    </div>
                    <div class="flex items-center mr-4 my-2 sm:my-0">
                      <img src="../images/apprenticeJobAd/date_range_black_24dp.svg" alt="clock-icon" class="flex">
                      <span class="text-sm">{{job.closingDate}}</span>
                    </div>
                  </div>
                  <div class="mt-2 ml-2">
                    <p class="text-sm">{{job.briefOverview}}</p>
                  </div>
                </div>
              </div>
              <div class="apply-btn find-out-more-btn flex flex-col sm:flex-row">
                <a class="mt-auto mr-0 sm:mr-8 mb-2 sm:mb-0 py-2 px-4 bg-blue-200 text-md font-bold font-heading rounded text-white" href="/jobs/{{ job.slug.current }}/index.html" style="color:white;">Apply Now</a>
                <a class="mt-auto py-2 px-4 bg-white text-md font-bold font-heading rounded border border-blue-200" href="{{job.pdf}}" target="_blank" style="color:#2574a9;">Find Out More</a>
              </div>

            </div>
          </div>

        {% endfor %}
        </div>
      </div>
    </div>
  </main>


<script>
const filterOptions = document.querySelector('.filterOptions')
const searchBar = document.querySelector('#search')
const searchBtn = document.querySelector('#searchBtnJobIndex')
const disabilityCheckbox = document.querySelectorAll('.disability-confident-employer')
const locationCheckbox = document.querySelectorAll('.location')
const standardCheckbox = document.querySelectorAll('.standard')
const employmentTypeCheckbox = document.querySelectorAll('.employment-type')
const resetIcon = document.querySelector('.resetIcon')
const singleAd = Array.from(document.querySelectorAll('.singleAd'))
const sortSelect = document.querySelector('.sort')
const gridIcon = document.querySelector('.gridView')
const listIcon = document.querySelector('.listView')
let locationArray = []
let disabilityArray = []
let standardArray = []

listIcon.addEventListener('click', toggleGrid)
gridIcon.addEventListener('click', toggleGrid)


filterOptions.addEventListener('change', e => {
  //filter options is the container div for all the checkboxes.the event listener listens for any change, check/uncheck
    if(e.target.classList.contains('location')){
      let selectedLocation = join(e.target.value)
        if(e.target.checked) {
          locationArray.push(selectedLocation)
        } else if (!e.target.checked){
          let index = locationArray.indexOf(selectedLocation)
          locationArray.splice(index, 1)
        }
    } else if(e.target.classList.contains('disability-confident-employer')){
        let checkboxValue = join(e.target.value);

        if(e.target.checked){
        disabilityArray.push(checkboxValue)
        } else if(!e.target.checked) {
            let index = disabilityArray.indexOf(checkboxValue)
            disabilityArray.splice(index, 1)
        }
    } else if(e.target.classList.contains('apprentince-standard')){
        let checkboxValue = join(e.target.value);

        if(e.target.checked){
        standardArray.push(checkboxValue)
        } else if(!e.target.checked) {
            let index = standardArray.indexOf(checkboxValue)
            standardArray.splice(index, 1)

        }
    }

    singleAd.forEach(job => {
      if(locationArray.length > 0 && disabilityArray.length > 0 && standardArray.length > 0){

        filtertriplearray(standardArray, disabilityArray, standardArray, job)
      }

      if(locationArray.length < 1 && disabilityArray.length > 0 && standardArray.length > 0){

        filterdoublearray(disabilityArray, standardArray, job)
      }

      if(locationArray.length > 0 && disabilityArray.length < 1 && standardArray.length > 0){

        filterdoublearray(locationArray, standardArray, job)
      }

      if(locationArray.length > 0 && disabilityArray.length > 0 && standardArray.length < 1){

        filterdoublearray(locationArray, disabilityArray, job)
      }

      if(locationArray.length >= 1 && disabilityArray.length < 1 && standardArray.length < 1){

        filterSingleArray(locationArray, job)
      }

      if(disabilityArray.length >= 1 && locationArray.length < 1 && standardArray.length < 1){

        filterSingleArray(disabilityArray, job)
      }

      if(standardArray.length >= 1 && disabilityArray.length < 1 && locationArray.length < 1){

        filterSingleArray(standardArray, job)
      }

      if(locationArray.length < 1 && disabilityArray.length < 1 && standardArray.length < 1){
        reset()
      }
    })
})

resetIcon.addEventListener('click', reset);

/* searchBar.addEventListener('keyup', e => {
const searchString = e.target.value
const jobs = document.querySelectorAll('.singleAd.flex');

  jobs.forEach(job => {
    if(!job.classList.includes(searchString)){
      job.classList.add('hidden')
      job.classList.remove('flex')
    } else {
      job.classList.add('flex')
      job.classList.remove('hidden')
    }
  })

  displayNumVacancies()

}) */

function toggleGrid(){
  const jobs = document.querySelectorAll('.singleAd.flex')
  const jobChildEl = jobs[0];
  jobChildEl.parentNode.classList.toggle('flex-col')
  jobChildEl.parentNode.classList.toggle('flex-row')
  jobChildEl.parentNode.classList.toggle('flex-wrap')

  jobs.forEach(job => {
    job.classList.toggle('w-5/12')
    job.classList.toggle('mx-auto')
    job.firstElementChild.classList.toggle('h-full')

  })
}

function filtertriplearray(arr1, arr2, arr3, el){
    if(arr1.some(item=>Array.from(el.classList).includes(item)) && arr2.some(item=>Array.from(el.classList).includes(item)) && arr3.some(item=>Array.from(el.classList).includes(item))){
      el.classList.remove('hidden')
      el.classList.add('flex')
    } else {
      el.classList.add('hidden')
      el.classList.remove('flex')
    }

    displayNumVacancies()
}

function filterdoublearray(arr1, arr2, el){
    if(arr1.some(item=>Array.from(el.classList).includes(item)) && arr2.some(item=>Array.from(el.classList).includes(item))){
      el.classList.remove('hidden')
      el.classList.add('flex')
    } else {
      el.classList.add('hidden')
      el.classList.remove('flex')
    }

    displayNumVacancies()
}

function filterSingleArray(arr, el){
    if(arr.some(item=>Array.from(el.classList).includes(item))){

      el.classList.remove('hidden')
      el.classList.add('flex')
    } else {

      el.classList.add('hidden')
      el.classList.remove('flex')
    }

    displayNumVacancies()
}

function join(string){
    return string.replace(/\s+/g, '-').toLowerCase()
}

function reset(){
  disabilityArray = []
  locationArray = []

  singleAd.forEach(ad => {
    ad.classList.remove('hidden')
    ad.classList.add('flex')
  })

  standardCheckbox.forEach(box => {
    box.checked = false
  })

  locationCheckbox.forEach(box => {
    box.checked = false
  })

  disabilityCheckbox.forEach(box => {
    box.checked = false
  })
  displayNumVacancies()
}

function displayNumVacancies(){
  const ads = document.querySelectorAll('.singleAd.flex');
  const display = document.querySelector('.showing')

  display.innerHTML = ads.length;
}

displayNumVacancies()
</script>